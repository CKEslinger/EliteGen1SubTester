PassTime Elite II Tester README.txt
 Build Date: 5/13/2013
 File Version: 2.4.0.16
 Product version 2.04.0016
 Splash Screen Version 2.4, Build 16

This file contains information on how to execute the PassTime Elite II Tester, 
dialog based application (PassTimeTester.exe) for validating the correct 
programming and functioning of a PassTime Elite II device.

Software:
This validation application is a form based application written in Microsoft 
Visual Basic 6.0. Along with various activeX controls and dynamic link 
libraries (installed as part of the PassTime Tester Setup Package) the 
application uses an xml file for storing and retrieving the serial numbers of 
the current PassTime device under test. The xml fils is also used to store and 
retrieve application settings. A seperate text file, PassTimeInv.txt, installed
in the C:\PassTimeData folder, contains the serial numbers of units that have 
passed the tests.

Hardware:
This application is used in conjunction with a PassTime Elite II Functional 
Fixture (with a PassTime Elite II device properly inserted); a PassTime 
interconnect board; a cell site simulator (attached to PC via RS232 cable on 
COM port 5 and attached to the fixture); a GPS antenna (attached to the fixture); 
a standard PC microphone (attached to PC's integrated or external audio and 
attached to the fixture); a standard 9-pin serial cable (attached to PC using COM 
port 4 and attached to the fixture); a digital data acquisition board (PCI DAQ 
installed in the PC and attached to the interconnect board); a variable power 
supply (attached to PC via RS232 cable on COM port 1); a label printer (attached 
to PC via 25-pin cable using LPT1 port); and a barcode scanner (attached to PC 
using any available USB port). See the system wiring diagram for details on 
connecting the components.

Operating the PassTime Tester:
-Before Running the First Test:
Assuming that the devices listed in the hardware section are properly connected 
and configured, make sure that the label printer (Zebra 110xiIII Thermal 
Transfer Printer), the power supply (Agilent Power supply E3646A) and the call 
box (Wiltek 4202s) are powered on.

Additionally, the the gps simulator (Aeroflex GPS-101) should be powered on. 
After the GPS Simulator self-check completes a message displays that warns of 
an out of date almanac. Push the "ESC" button on the front panel to clear the 
message. Use the up and down "Select" arrow keys to select the data fields and 
the SLEW/STEP knob to set the values of data fields as follows:

 -dBm: "-85 dBm"
 SV: "SV14"
 T: "T2"
 DPLR: "DPLR0"
 RF: "RFON"

Finally, start the application by double-clicking the desktop link, 
"PassTime Tester"

-Running a Test
The following is a step-by-step procedure for testing a "known good" PassTime 
Elite II device. These procedures may vary from the actual test procedures used 
by the manufacturer and are listed here for demonstration purposes only:

1) Open the tester. The tester is a double enclosure and requires two handles
   to be released and raised up in order to insert or remove a device
2) Select the type of Elite II unit from the "Model Type Under Test" 
   drop-down list box
3) Select the type of SIM card that is inserted in 
   the Elite II unit from the "Installed SIM Card" drop-down box
4) Select the "Operations to perform". For a full test select all operations
   except "Trial Run"
5) Insert the PassTime Elite II Device Under Test (DUT) into the jig and make
   sure that it is seated correctly in the test fixture
6) Close the tester. Make sure the inner tester encolsure's handle is in the
   locked down position before closing the outer enclosure lid. The test run
   will automatically start
7) After successful completion of the test and subsequent label printing, scan 
   the printed labels with the barcode scanner when prompted
8) Repeat steps 1 through 7 as necessary

Adding Additional Tests:
PassTime Elite II Tester has the ability to include additional commands that 
were not initially included in the current compiled test code.

If you wish to add another device command place it in the 'AddTests' tag inside 
the XML file. Each additional command will get another line added into the XML 
file (eg Add1 is on one line, Add2 would be below it, ect.).

For example, if the code wasn't checking the application version and you wanted 
to add that function into the overall Elite II tests then inside the 'AddTests' 
tag under the 'Add1' node you would add a description of the test in the 
'Description' attribute. This is what is displayed on the GUI. Then add the 
command under the 'Command' attribute. In this example it would be 'AT$APVER' 
for getting the application version. Then put exactly what is returned in the 
'Result' attribute. In this case, the command returns 'Elite 2.a40,0' - it must 
be exact or it will not compare and will fail. Finally, put a timeout value in 
the 'Time' attribute if you want to be able to exit out of a command that is 
taking too long to process. The default timeout period is 3 seconds. Leave this 
attribute blank if that time is sufficient.

Also add the number '37' in the 'Tests' tag inside the XML file under the model
type you wish the command(s) to run against. It must be only test '37' no 
matter how many additional commands you have added. Please note that these 
additional functions are limited to commands that have a static response. They 
are unable to handle a range of acceptable responses (e.g., a voltage or 
current reading).
